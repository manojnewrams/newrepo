variables:
  DOCKER_DRIVER: overlay
  DOCKER_HOST: localhost
  DOCKER_TLS_CERTDIR: ""

include:
  - project: 'gitlab-templates/ci-templates/java/gradle'
    file: 'gitlab-ci-template.yml'
  - project: 'gitlab-templates/ci-templates/build/docker'
    file: 'gitlab-ci-template.yml'  

stages:
  - build
  - test
  - pushImage
  - deploy

build:
  stage: build
  image: gradle:6.0.1-jdk8
  extends: .gradle_java_build
  tags:
    - runnerk8s

.test:
  stage: test
  script:
    - gradle test

pushImage:
  stage: pushImage
  extends: .docker_image_creation
  tags:
    - runnerk8s
  before_script:
    - docker login $URL_REGISTRY -u $USER -p $TOKEN
  script:
    - echo $DOCKER_HOST
    - docker info
    - docker build -t $USER/$APP_NAME:$CI_COMMIT_SHORT_SHA . 
    - docker push $USER/$APP_NAME:$CI_COMMIT_SHORT_SHA

deployInAws:
  stage: deploy
  image: ubuntu:xenial
  tags:
    - runnerk8s
  before_script:
    - apt-get update -y
    - apt-get upgrade -y
    - apt-get install openssh-client -y
    - apt-get install openssh-server -y
    - service ssh start
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  #  - echo "Host *
  #      StrictHostKeyChecking no" > ~/.ssh/config
  #  - chmod 400 ~/.ssh
  #  - ssh -t -t  $AWS_HOST
  #  - ssh-keygen -R $AWS_HOST
    - ssh-keygen -H -R ${AWS_HOST} >> ~/.ssh/known_hosts
    - ssh -t -t $AWS_HOST
    - docker info
    - docker login $URL_REGISTRY -u $USER -p $TOKEN
    - docker pull $USER/$APP_NAME:$CI_COMMIT_SHORT_SHA
    - docker run -p 8080:8080 $USER/$APP_NAME:$CI_COMMIT_SHORT_SHA