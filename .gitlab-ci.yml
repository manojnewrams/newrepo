variables:
  DOCKER_DRIVER: overlay
  DOCKER_HOST: localhost
  DOCKER_TLS_CERTDIR: ""

include:
  - project: 'gitlab-templates/ci-templates/java/gradle'
    file: 'gitlab-ci-template.yml'
  - project: 'gitlab-templates/ci-templates/build/docker'
    file: 'gitlab-ci-template.yml'  

stages:
  - build
  - test
  - pushImage
  - deploy

build:
  stage: build
  image: gradle:6.0.1-jdk8
  extends: .gradle_java_build
  tags:
    - runnerk8s

.test:
  stage: test
  script:
    - gradle test

pushImage:
  stage: pushImage
  extends: .docker_image_creation
  tags:
    - runnerk8s
  before_script:
    - docker login $URL_REGISTRY -u $USER -p $TOKEN
  script:
    - echo $DOCKER_HOST
    - docker info
    - docker build -t $USER/$APP_NAME:$CI_COMMIT_SHORT_SHA . 
    - docker push $USER/$APP_NAME:$CI_COMMIT_SHORT_SHA

deployInAws:
  stage: deploy
  image: ubuntu:xenial
  tags:
    - runnerk8s
  before_script:
    - apt-get update
    - apt-get install -y cl-base64
    - apt-get install -y openssh-client
    - mkdir ~/.ssh
    - echo $SSH_PRIVATE_KEY | base64 -d > $URL_KEY
    - chmod 600 $URL_KEY
  script:
    - scp -i $URL_KEY -o $KNOWN_HOST_FILE -o $KEY_CHECKING -o ConnectTimeout=10 errorHandler.sh $AWS_HOST:/tmp/
    - ssh -i $URL_KEY -o $KNOWN_HOST_FILE -o $KEY_CHECKING -o ConnectTimeout=10 $AWS_HOST "/tmp/errorHandler.sh $USER $APP_NAME $CI_COMMIT_SHORT_SHA"
  # only:
  #   - master
      